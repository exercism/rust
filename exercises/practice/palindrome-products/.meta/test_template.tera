use palindrome_products::*;
use std::collections::HashSet;

{% for test in cases %}
#[test]
#[ignore]
fn {{ test.description | make_ident }}() {
    let output = palindrome_products({{ test.input.min }}, {{ test.input.max }});

    {%- if test.expected.error is defined or not test.expected.value %}
        assert!(output.is_none());
    {%- else %}
      assert!(output.is_some());

      {% if test.property == "smallest" %}
        let (pal, _) = output.unwrap();
      {%- else %}
        let (_, pal) = output.unwrap();
      {%- endif%}
      assert_eq!(pal.value(), {{ test.expected.value }});
      assert_eq!(pal.into_factors(), HashSet::from([
        {{- test.expected.factors | join(sep=", ") | replace(from="[", to="(") | replace(from="]", to=")") -}}
      ]));
    {%- endif%}
}
{% endfor -%}
